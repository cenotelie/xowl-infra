/*
 * WARNING: this file has been generated by
 * Hime Parser Generator 2.0.0.0
 */

package org.xowl.store.loaders;

import org.xowl.hime.redist.Symbol;
import org.xowl.hime.redist.lexer.Automaton;
import org.xowl.hime.redist.lexer.ContextFreeLexer;

import java.io.InputStreamReader;

/**
 * Represents a lexer
 */
class SPARQLLexer extends ContextFreeLexer {
    /**
     * The automaton for this lexer
     */
    private static final Automaton commonAutomaton = Automaton.find(SPARQLLexer.class, "SPARQLLexer.bin");
    /**
     * Contains the constant IDs for the terminals for this lexer
     */
    public static class ID {
        /**
         * The unique identifier for terminal PN_LOCAL
         */
        public static final int PN_LOCAL = 0x000E;
        /**
         * The unique identifier for terminal PN_CHARS
         */
        public static final int PN_CHARS = 0x000C;
        /**
         * The unique identifier for terminal PN_CHARS_U
         */
        public static final int PN_CHARS_U = 0x000B;
        /**
         * The unique identifier for terminal PN_PREFIX
         */
        public static final int PN_PREFIX = 0x000D;
        /**
         * The unique identifier for terminal PN_CHARS_BASE
         */
        public static final int PN_CHARS_BASE = 0x000A;
        /**
         * The unique identifier for terminal BLANK
         */
        public static final int BLANK = 0x0006;
        /**
         * The unique identifier for terminal NEW_LINE
         */
        public static final int NEW_LINE = 0x0003;
        /**
         * The unique identifier for terminal WHITE_SPACE
         */
        public static final int WHITE_SPACE = 0x0004;
        /**
         * The unique identifier for terminal PNAME_NS
         */
        public static final int PNAME_NS = 0x000F;
        /**
         * The unique identifier for terminal INTEGER
         */
        public static final int INTEGER = 0x0014;
        /**
         * The unique identifier for terminal COMMENT
         */
        public static final int COMMENT = 0x0005;
        /**
         * The unique identifier for terminal LANGTAG
         */
        public static final int LANGTAG = 0x0007;
        /**
         * The unique identifier for terminal IRIREF
         */
        public static final int IRIREF = 0x0008;
        /**
         * The unique identifier for terminal ANON
         */
        public static final int ANON = 0x0013;
        /**
         * The unique identifier for terminal STRING_LITERAL_QUOTE
         */
        public static final int STRING_LITERAL_QUOTE = 0x0017;
        /**
         * The unique identifier for terminal STRING_LITERAL_SINGLE_QUOTE
         */
        public static final int STRING_LITERAL_SINGLE_QUOTE = 0x0018;
        /**
         * The unique identifier for terminal BY
         */
        public static final int BY = 0x0028;
        /**
         * The unique identifier for terminal AS
         */
        public static final int AS = 0x0020;
        /**
         * The unique identifier for terminal TO
         */
        public static final int TO = 0x0031;
        /**
         * The unique identifier for terminal IN
         */
        public static final int IN = 0x0049;
        /**
         * The unique identifier for terminal DECIMAL
         */
        public static final int DECIMAL = 0x0015;
        /**
         * The unique identifier for terminal VARIABLE
         */
        public static final int VARIABLE = 0x0012;
        /**
         * The unique identifier for terminal PLX
         */
        public static final int PLX = 0x0009;
        /**
         * The unique identifier for terminal PNAME_LN
         */
        public static final int PNAME_LN = 0x0010;
        /**
         * The unique identifier for terminal BLANK_NODE_LABEL
         */
        public static final int BLANK_NODE_LABEL = 0x0011;
        /**
         * The unique identifier for terminal ASK
         */
        public static final int ASK = 0x0024;
        /**
         * The unique identifier for terminal ASC
         */
        public static final int ASC = 0x002B;
        /**
         * The unique identifier for terminal ADD
         */
        public static final int ADD = 0x0037;
        /**
         * The unique identifier for terminal ALL
         */
        public static final int ALL = 0x0041;
        /**
         * The unique identifier for terminal NOT
         */
        public static final int NOT = 0x004A;
        /**
         * The unique identifier for terminal DOUBLE
         */
        public static final int DOUBLE = 0x0016;
        /**
         * The unique identifier for terminal BASE
         */
        public static final int BASE = 0x001C;
        /**
         * The unique identifier for terminal BIND
         */
        public static final int BIND = 0x0044;
        /**
         * The unique identifier for terminal DATA
         */
        public static final int DATA = 0x003D;
        /**
         * The unique identifier for terminal DESC
         */
        public static final int DESC = 0x002C;
        /**
         * The unique identifier for terminal DROP
         */
        public static final int DROP = 0x0035;
        /**
         * The unique identifier for terminal COPY
         */
        public static final int COPY = 0x0039;
        /**
         * The unique identifier for terminal WITH
         */
        public static final int WITH = 0x003C;
        /**
         * The unique identifier for terminal FROM
         */
        public static final int FROM = 0x0025;
        /**
         * The unique identifier for terminal LOAD
         */
        public static final int LOAD = 0x0033;
        /**
         * The unique identifier for terminal INTO
         */
        public static final int INTO = 0x0032;
        /**
         * The unique identifier for terminal MOVE
         */
        public static final int MOVE = 0x0038;
        /**
         * The unique identifier for terminal CLEAR
         */
        public static final int CLEAR = 0x0034;
        /**
         * The unique identifier for terminal WHERE
         */
        public static final int WHERE = 0x0022;
        /**
         * The unique identifier for terminal NAMED
         */
        public static final int NAMED = 0x0026;
        /**
         * The unique identifier for terminal GROUP
         */
        public static final int GROUP = 0x0027;
        /**
         * The unique identifier for terminal GRAPH
         */
        public static final int GRAPH = 0x0040;
        /**
         * The unique identifier for terminal ORDER
         */
        public static final int ORDER = 0x002A;
        /**
         * The unique identifier for terminal LIMIT
         */
        public static final int LIMIT = 0x002D;
        /**
         * The unique identifier for terminal MINUS
         */
        public static final int MINUS = 0x0046;
        /**
         * The unique identifier for terminal USING
         */
        public static final int USING = 0x003E;
        /**
         * The unique identifier for terminal UNION
         */
        public static final int UNION = 0x0045;
        /**
         * The unique identifier for terminal UNDEF
         */
        public static final int UNDEF = 0x0048;
        /**
         * The unique identifier for terminal STRING_LITERAL_LONG_QUOTE
         */
        public static final int STRING_LITERAL_LONG_QUOTE = 0x001A;
        /**
         * The unique identifier for terminal STRING_LITERAL_LONG_SINGLE_QUOTE
         */
        public static final int STRING_LITERAL_LONG_SINGLE_QUOTE = 0x0019;
        /**
         * The unique identifier for terminal PREFIX
         */
        public static final int PREFIX = 0x001B;
        /**
         * The unique identifier for terminal SELECT
         */
        public static final int SELECT = 0x001D;
        /**
         * The unique identifier for terminal SILENT
         */
        public static final int SILENT = 0x0030;
        /**
         * The unique identifier for terminal DELETE
         */
        public static final int DELETE = 0x003B;
        /**
         * The unique identifier for terminal CREATE
         */
        public static final int CREATE = 0x0036;
        /**
         * The unique identifier for terminal FILTER
         */
        public static final int FILTER = 0x0047;
        /**
         * The unique identifier for terminal HAVING
         */
        public static final int HAVING = 0x0029;
        /**
         * The unique identifier for terminal OFFSET
         */
        public static final int OFFSET = 0x002E;
        /**
         * The unique identifier for terminal VALUES
         */
        public static final int VALUES = 0x002F;
        /**
         * The unique identifier for terminal INSERT
         */
        public static final int INSERT = 0x003A;
        /**
         * The unique identifier for terminal SERVICE
         */
        public static final int SERVICE = 0x0043;
        /**
         * The unique identifier for terminal DEFAULT
         */
        public static final int DEFAULT = 0x003F;
        /**
         * The unique identifier for terminal REDUCED
         */
        public static final int REDUCED = 0x001F;
        /**
         * The unique identifier for terminal DISTINCT
         */
        public static final int DISTINCT = 0x001E;
        /**
         * The unique identifier for terminal DESCRIBE
         */
        public static final int DESCRIBE = 0x0023;
        /**
         * The unique identifier for terminal OPTIONAL
         */
        public static final int OPTIONAL = 0x0042;
        /**
         * The unique identifier for terminal CONSTRUCT
         */
        public static final int CONSTRUCT = 0x0021;
    }
    /**
     * Contains the constant IDs for the contexts for this lexer
     */
    public static class Context {
        /**
         * The unique identifier for the default context
         */
        public static final int DEFAULT = 0;
    }
    /**
     * The collection of terminals matched by this lexer
     *
     * The terminals are in an order consistent with the automaton,
     * so that terminal indices in the automaton can be used to retrieve the terminals in this table
     */
    private static final Symbol[] terminals = {
        new Symbol(0x0001, "ε"),
        new Symbol(0x0002, "$"),
        new Symbol(0x0104, "<"),
        new Symbol(0x000E, "PN_LOCAL"),
        new Symbol(0x000C, "PN_CHARS"),
        new Symbol(0x000B, "PN_CHARS_U"),
        new Symbol(0x00F1, "["),
        new Symbol(0x000D, "PN_PREFIX"),
        new Symbol(0x000A, "PN_CHARS_BASE"),
        new Symbol(0x00EE, "a"),
        new Symbol(0x00D3, ";"),
        new Symbol(0x00D6, "*"),
        new Symbol(0x00D8, "("),
        new Symbol(0x00D9, ")"),
        new Symbol(0x00DC, "{"),
        new Symbol(0x00DD, "}"),
        new Symbol(0x00DE, "."),
        new Symbol(0x00EF, ","),
        new Symbol(0x00F2, "]"),
        new Symbol(0x00F8, "|"),
        new Symbol(0x00F9, "/"),
        new Symbol(0x00FA, "^"),
        new Symbol(0x00FB, "?"),
        new Symbol(0x00FC, "+"),
        new Symbol(0x00FD, "!"),
        new Symbol(0x0102, "="),
        new Symbol(0x0105, ">"),
        new Symbol(0x0108, "-"),
        new Symbol(0x0006, "BLANK"),
        new Symbol(0x0003, "NEW_LINE"),
        new Symbol(0x0004, "WHITE_SPACE"),
        new Symbol(0x000F, "PNAME_NS"),
        new Symbol(0x0014, "INTEGER"),
        new Symbol(0x0005, "COMMENT"),
        new Symbol(0x0007, "LANGTAG"),
        new Symbol(0x0107, "<="),
        new Symbol(0x0008, "IRIREF"),
        new Symbol(0x0013, "ANON"),
        new Symbol(0x0017, "STRING_LITERAL_QUOTE"),
        new Symbol(0x0018, "STRING_LITERAL_SINGLE_QUOTE"),
        new Symbol(0x0028, "BY"),
        new Symbol(0x0020, "AS"),
        new Symbol(0x0131, "TZ"),
        new Symbol(0x0031, "TO"),
        new Symbol(0x013B, "IF"),
        new Symbol(0x0049, "IN"),
        new Symbol(0x0015, "DECIMAL"),
        new Symbol(0x0100, "||"),
        new Symbol(0x0149, "^^"),
        new Symbol(0x0012, "VARIABLE"),
        new Symbol(0x0103, "!="),
        new Symbol(0x0101, "&&"),
        new Symbol(0x0106, ">="),
        new Symbol(0x0009, "PLX"),
        new Symbol(0x0010, "PNAME_LN"),
        new Symbol(0x0011, "BLANK_NODE_LABEL"),
        new Symbol(0x010A, "SUM"),
        new Symbol(0x0111, "STR"),
        new Symbol(0x012C, "DAY"),
        new Symbol(0x010D, "AVG"),
        new Symbol(0x011A, "ABS"),
        new Symbol(0x0024, "ASK"),
        new Symbol(0x002B, "ASC"),
        new Symbol(0x0037, "ADD"),
        new Symbol(0x0041, "ALL"),
        new Symbol(0x0132, "NOW"),
        new Symbol(0x004A, "NOT"),
        new Symbol(0x0116, "IRI"),
        new Symbol(0x010B, "MIN"),
        new Symbol(0x010C, "MAX"),
        new Symbol(0x0135, "MD5"),
        new Symbol(0x0117, "URI"),
        new Symbol(0x0016, "DOUBLE"),
        new Symbol(0x001C, "BASE"),
        new Symbol(0x0044, "BIND"),
        new Symbol(0x0136, "SHA1"),
        new Symbol(0x003D, "DATA"),
        new Symbol(0x002C, "DESC"),
        new Symbol(0x0035, "DROP"),
        new Symbol(0x0119, "RAND"),
        new Symbol(0x0039, "COPY"),
        new Symbol(0x011B, "CEIL"),
        new Symbol(0x003C, "WITH"),
        new Symbol(0x0025, "FROM"),
        new Symbol(0x0112, "LANG"),
        new Symbol(0x0033, "LOAD"),
        new Symbol(0x0147, "true"),
        new Symbol(0x0032, "INTO"),
        new Symbol(0x0038, "MOVE"),
        new Symbol(0x0133, "UUID"),
        new Symbol(0x012A, "YEAR"),
        new Symbol(0x0115, "BOUND"),
        new Symbol(0x0118, "BNODE"),
        new Symbol(0x013D, "STRDT"),
        new Symbol(0x011D, "ROUND"),
        new Symbol(0x0144, "REGEX"),
        new Symbol(0x0109, "COUNT"),
        new Symbol(0x0034, "CLEAR"),
        new Symbol(0x0022, "WHERE"),
        new Symbol(0x011C, "FLOOR"),
        new Symbol(0x0148, "false"),
        new Symbol(0x0026, "NAMED"),
        new Symbol(0x0027, "GROUP"),
        new Symbol(0x0040, "GRAPH"),
        new Symbol(0x012D, "HOURS"),
        new Symbol(0x002A, "ORDER"),
        new Symbol(0x0123, "LCASE"),
        new Symbol(0x002D, "LIMIT"),
        new Symbol(0x013F, "isIRI"),
        new Symbol(0x0140, "isURI"),
        new Symbol(0x0046, "MINUS"),
        new Symbol(0x012B, "MONTH"),
        new Symbol(0x0122, "UCASE"),
        new Symbol(0x003E, "USING"),
        new Symbol(0x0045, "UNION"),
        new Symbol(0x0048, "UNDEF"),
        new Symbol(0x001A, "STRING_LITERAL_LONG_QUOTE"),
        new Symbol(0x0019, "STRING_LITERAL_LONG_SINGLE_QUOTE"),
        new Symbol(0x001B, "PREFIX"),
        new Symbol(0x011F, "SUBSTR"),
        new Symbol(0x010E, "SAMPLE"),
        new Symbol(0x001D, "SELECT"),
        new Symbol(0x0120, "STRLEN"),
        new Symbol(0x0137, "SHA256"),
        new Symbol(0x0138, "SHA384"),
        new Symbol(0x0139, "SHA512"),
        new Symbol(0x0030, "SILENT"),
        new Symbol(0x003B, "DELETE"),
        new Symbol(0x011E, "CONCAT"),
        new Symbol(0x0036, "CREATE"),
        new Symbol(0x0047, "FILTER"),
        new Symbol(0x0029, "HAVING"),
        new Symbol(0x002E, "OFFSET"),
        new Symbol(0x002F, "VALUES"),
        new Symbol(0x003A, "INSERT"),
        new Symbol(0x0145, "EXISTS"),
        new Symbol(0x012F, "SECONDS"),
        new Symbol(0x0043, "SERVICE"),
        new Symbol(0x013C, "STRLANG"),
        new Symbol(0x0127, "STRENDS"),
        new Symbol(0x0134, "STRUUID"),
        new Symbol(0x003F, "DEFAULT"),
        new Symbol(0x0121, "REPLACE"),
        new Symbol(0x001F, "REDUCED"),
        new Symbol(0x0141, "isBLANK"),
        new Symbol(0x012E, "MINUTES"),
        new Symbol(0x0129, "STRAFTER"),
        new Symbol(0x013E, "sameTerm"),
        new Symbol(0x0114, "DATATYPE"),
        new Symbol(0x001E, "DISTINCT"),
        new Symbol(0x0023, "DESCRIBE"),
        new Symbol(0x0125, "CONTAINS"),
        new Symbol(0x013A, "COALESCE"),
        new Symbol(0x0042, "OPTIONAL"),
        new Symbol(0x0130, "TIMEZONE"),
        new Symbol(0x0110, "SEPARATOR"),
        new Symbol(0x0126, "STRSTARTS"),
        new Symbol(0x0128, "STRBEFORE"),
        new Symbol(0x0021, "CONSTRUCT"),
        new Symbol(0x0142, "isLITERAL"),
        new Symbol(0x0143, "isNUMERIC"),
        new Symbol(0x0113, "LANGMATCHES"),
        new Symbol(0x010F, "GROUP_CONCAT"),
        new Symbol(0x0124, "ENCODE_FOR_URI") };
    /**
     * Initializes a new instance of the lexer
     *
     * @param input The lexer's input
     */
    public SPARQLLexer(String input) {
        super(commonAutomaton, terminals, 0x0006, input);
    }
    /**
     * Initializes a new instance of the lexer
     *
     * @param input The lexer's input
     */
    public SPARQLLexer(InputStreamReader input) {
        super(commonAutomaton, terminals, 0x0006, input);
    }
}
