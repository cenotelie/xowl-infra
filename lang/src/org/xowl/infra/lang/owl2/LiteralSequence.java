/* This file has been generated by:
   xOWL Code Generator
*/
package org.xowl.infra.lang.owl2;

public class LiteralSequence implements org.xowl.infra.lang.owl2.LiteralSequenceExpression {
    // <editor-fold defaultstate="collapsed" desc="Property literalElements">
    public static interface literalElements {
        boolean check_contains(org.xowl.infra.lang.owl2.LiteralElement elem);
        boolean user_check_add(org.xowl.infra.lang.owl2.LiteralElement elem);
        boolean user_check_remove(org.xowl.infra.lang.owl2.LiteralElement elem);
        boolean user_check_replace(org.xowl.infra.lang.owl2.LiteralElement oldElem, org.xowl.infra.lang.owl2.LiteralElement  newElem);
        void user_add(org.xowl.infra.lang.owl2.LiteralElement elem);
        void user_remove(org.xowl.infra.lang.owl2.LiteralElement elem);
        boolean inverse_check_add(org.xowl.infra.lang.owl2.LiteralElement elem);
        boolean inverse_check_remove(org.xowl.infra.lang.owl2.LiteralElement elem);
        boolean inverse_check_replace(org.xowl.infra.lang.owl2.LiteralElement oldElem, org.xowl.infra.lang.owl2.LiteralElement  newElem);
        void inverse_add(org.xowl.infra.lang.owl2.LiteralElement elem);
        void inverse_remove(org.xowl.infra.lang.owl2.LiteralElement elem);
    }
    private static class literalElements_impl implements org.xowl.infra.lang.owl2.LiteralSequence.literalElements {
        private org.xowl.infra.lang.owl2.LiteralSequence domain;
        private java.util.List<org.xowl.infra.lang.owl2.LiteralElement> data;
        public java.util.Collection<org.xowl.infra.lang.owl2.LiteralElement> get_raw() { return new java.util.ArrayList<org.xowl.infra.lang.owl2.LiteralElement>(data); }
        public java.util.Collection<org.xowl.infra.lang.owl2.LiteralElement> get() { return new java.util.ArrayList<org.xowl.infra.lang.owl2.LiteralElement>(data); }
        private boolean check_card(int modifier) {
            int card = data.size() + 0 + modifier;
            return (card >= 0 && card <= 2147483647);
        }
        @Override public boolean check_contains(org.xowl.infra.lang.owl2.LiteralElement elem) { return (data.contains(elem)); }
        public boolean simple_check_add(org.xowl.infra.lang.owl2.LiteralElement elem) {
            if (check_contains(elem)) return false;
            if (!check_card(1)) return false;
            return true;
        }
        public boolean simple_check_remove(org.xowl.infra.lang.owl2.LiteralElement elem) {
            if (!check_contains(elem)) return false;
            if (!check_card(-1)) return false;
            return true;
        }
        public boolean simple_check_replace(org.xowl.infra.lang.owl2.LiteralElement oldElem, org.xowl.infra.lang.owl2.LiteralElement  newElem) {
            if (check_contains(newElem)) return false;
            if (!check_contains(oldElem)) return false;
            return true;
        }
        public void simple_add(org.xowl.infra.lang.owl2.LiteralElement elem) {
            data.add(elem);
        }
        public void simple_remove(org.xowl.infra.lang.owl2.LiteralElement elem) {
            data.remove(elem);
        }
        private boolean tree_check_add(org.xowl.infra.lang.owl2.LiteralElement elem) {
            if (!simple_check_add(elem)) return false;
            return true;
        }
        private boolean tree_check_remove(org.xowl.infra.lang.owl2.LiteralElement elem) {
            if (!simple_check_remove(elem)) return false;
            return true;
        }
        private boolean tree_check_replace(org.xowl.infra.lang.owl2.LiteralElement oldElem, org.xowl.infra.lang.owl2.LiteralElement  newElem) {
            if (!simple_check_replace(oldElem, newElem)) return false;
            return true;
        }
        private void tree_add(org.xowl.infra.lang.owl2.LiteralElement elem) {
            simple_add(elem);
        }
        private void tree_remove(org.xowl.infra.lang.owl2.LiteralElement elem) {
            simple_remove(elem);
        }
        @Override public boolean user_check_add(org.xowl.infra.lang.owl2.LiteralElement elem) {
            return tree_check_add(elem);
        }
        @Override public boolean user_check_remove(org.xowl.infra.lang.owl2.LiteralElement elem) {
            return tree_check_remove(elem);
        }
        @Override public boolean user_check_replace(org.xowl.infra.lang.owl2.LiteralElement oldElem, org.xowl.infra.lang.owl2.LiteralElement  newElem) {
            return tree_check_replace(oldElem, newElem);
        }
        @Override public void user_add(org.xowl.infra.lang.owl2.LiteralElement elem) {
            tree_add(elem);
        }
        @Override public void user_remove(org.xowl.infra.lang.owl2.LiteralElement elem) {
            tree_remove(elem);
        }
        @Override public boolean inverse_check_add(org.xowl.infra.lang.owl2.LiteralElement elem) {
            return tree_check_add(elem);
        }
        @Override public boolean inverse_check_remove(org.xowl.infra.lang.owl2.LiteralElement elem) {
            return tree_check_remove(elem);
        }
        @Override public boolean inverse_check_replace(org.xowl.infra.lang.owl2.LiteralElement oldElem, org.xowl.infra.lang.owl2.LiteralElement  newElem) {
            return tree_check_replace(oldElem, newElem);
        }
        @Override public void inverse_add(org.xowl.infra.lang.owl2.LiteralElement elem) {
            tree_add(elem);
        }
        @Override public void inverse_remove(org.xowl.infra.lang.owl2.LiteralElement elem) {
            tree_remove(elem);
        }
        public literalElements_impl(org.xowl.infra.lang.owl2.LiteralSequence domain) {
            this.domain = domain;
            this.data = new java.util.ArrayList<org.xowl.infra.lang.owl2.LiteralElement>();
        }
    }
    private literalElements_impl dataLiteralElements;
    public org.xowl.infra.lang.owl2.LiteralSequence.literalElements __getImplOfliteralElements() { return dataLiteralElements; }
    public boolean addLiteralElements(org.xowl.infra.lang.owl2.LiteralElement elem) {
        if (!dataLiteralElements.user_check_add(elem)) return false;
        dataLiteralElements.user_add(elem);
        return true;
    }
    public boolean removeLiteralElements(org.xowl.infra.lang.owl2.LiteralElement elem) {
        if (!dataLiteralElements.user_check_remove(elem)) return false;
        dataLiteralElements.user_remove(elem);
        return true;
    }
    public java.util.Collection<org.xowl.infra.lang.owl2.LiteralElement> getAllLiteralElements() { return dataLiteralElements.get(); }
    // </editor-fold>

    public LiteralSequence() {
        dataLiteralElements = new literalElements_impl(this);
    }

}
