/* This file has been generated by:
   xOWL Code Generator
*/
package org.xowl.infra.lang.runtime;

public interface Property extends org.xowl.infra.lang.runtime.Interpretation {
    // <editor-fold defaultstate="collapsed" desc="Property propertyEquivalentTo">
    public static interface propertyEquivalentTo {
        boolean check_contains(org.xowl.infra.lang.runtime.Property elem);
        boolean user_check_add(org.xowl.infra.lang.runtime.Property elem);
        boolean user_check_remove(org.xowl.infra.lang.runtime.Property elem);
        boolean user_check_replace(org.xowl.infra.lang.runtime.Property oldElem, org.xowl.infra.lang.runtime.Property  newElem);
        void user_add(org.xowl.infra.lang.runtime.Property elem);
        void user_remove(org.xowl.infra.lang.runtime.Property elem);
        boolean inverse_check_add(org.xowl.infra.lang.runtime.Property elem);
        boolean inverse_check_remove(org.xowl.infra.lang.runtime.Property elem);
        boolean inverse_check_replace(org.xowl.infra.lang.runtime.Property oldElem, org.xowl.infra.lang.runtime.Property  newElem);
        void inverse_add(org.xowl.infra.lang.runtime.Property elem);
        void inverse_remove(org.xowl.infra.lang.runtime.Property elem);
    }
    propertyEquivalentTo __getImplOfpropertyEquivalentTo();
    boolean addPropertyEquivalentTo(org.xowl.infra.lang.runtime.Property elem);
    boolean removePropertyEquivalentTo(org.xowl.infra.lang.runtime.Property elem);
    java.util.Collection<org.xowl.infra.lang.runtime.Property> getAllPropertyEquivalentToAs(org.xowl.infra.lang.runtime.Property type);
    // </editor-fold>
    // <editor-fold defaultstate="collapsed" desc="Property superPropertyOf">
    public static interface superPropertyOf {
        boolean check_contains(org.xowl.infra.lang.runtime.Property elem);
        boolean user_check_add(org.xowl.infra.lang.runtime.Property elem);
        boolean user_check_remove(org.xowl.infra.lang.runtime.Property elem);
        boolean user_check_replace(org.xowl.infra.lang.runtime.Property oldElem, org.xowl.infra.lang.runtime.Property  newElem);
        void user_add(org.xowl.infra.lang.runtime.Property elem);
        void user_remove(org.xowl.infra.lang.runtime.Property elem);
        boolean inverse_check_add(org.xowl.infra.lang.runtime.Property elem);
        boolean inverse_check_remove(org.xowl.infra.lang.runtime.Property elem);
        boolean inverse_check_replace(org.xowl.infra.lang.runtime.Property oldElem, org.xowl.infra.lang.runtime.Property  newElem);
        void inverse_add(org.xowl.infra.lang.runtime.Property elem);
        void inverse_remove(org.xowl.infra.lang.runtime.Property elem);
    }
    superPropertyOf __getImplOfsuperPropertyOf();
    boolean addSuperPropertyOf(org.xowl.infra.lang.runtime.Property elem);
    boolean removeSuperPropertyOf(org.xowl.infra.lang.runtime.Property elem);
    java.util.Collection<org.xowl.infra.lang.runtime.Property> getAllSuperPropertyOfAs(org.xowl.infra.lang.runtime.Property type);
    // </editor-fold>
    // <editor-fold defaultstate="collapsed" desc="Property domain">
    public static interface domain {
        boolean check_contains(org.xowl.infra.lang.runtime.Class elem);
        boolean user_check_add(org.xowl.infra.lang.runtime.Class elem);
        boolean user_check_remove(org.xowl.infra.lang.runtime.Class elem);
        boolean user_check_replace(org.xowl.infra.lang.runtime.Class oldElem, org.xowl.infra.lang.runtime.Class  newElem);
        void user_add(org.xowl.infra.lang.runtime.Class elem);
        void user_remove(org.xowl.infra.lang.runtime.Class elem);
        boolean inverse_check_add(org.xowl.infra.lang.runtime.Class elem);
        boolean inverse_check_remove(org.xowl.infra.lang.runtime.Class elem);
        boolean inverse_check_replace(org.xowl.infra.lang.runtime.Class oldElem, org.xowl.infra.lang.runtime.Class  newElem);
        void inverse_add(org.xowl.infra.lang.runtime.Class elem);
        void inverse_remove(org.xowl.infra.lang.runtime.Class elem);
    }
    domain __getImplOfdomain();
    boolean setDomain(org.xowl.infra.lang.runtime.Class elem);
    org.xowl.infra.lang.runtime.Class getDomain();
    // </editor-fold>
    // <editor-fold defaultstate="collapsed" desc="Property subPropertyOf">
    public static interface subPropertyOf {
        boolean check_contains(org.xowl.infra.lang.runtime.Property elem);
        boolean user_check_add(org.xowl.infra.lang.runtime.Property elem);
        boolean user_check_remove(org.xowl.infra.lang.runtime.Property elem);
        boolean user_check_replace(org.xowl.infra.lang.runtime.Property oldElem, org.xowl.infra.lang.runtime.Property  newElem);
        void user_add(org.xowl.infra.lang.runtime.Property elem);
        void user_remove(org.xowl.infra.lang.runtime.Property elem);
        boolean inverse_check_add(org.xowl.infra.lang.runtime.Property elem);
        boolean inverse_check_remove(org.xowl.infra.lang.runtime.Property elem);
        boolean inverse_check_replace(org.xowl.infra.lang.runtime.Property oldElem, org.xowl.infra.lang.runtime.Property  newElem);
        void inverse_add(org.xowl.infra.lang.runtime.Property elem);
        void inverse_remove(org.xowl.infra.lang.runtime.Property elem);
    }
    subPropertyOf __getImplOfsubPropertyOf();
    boolean addSubPropertyOf(org.xowl.infra.lang.runtime.Property elem);
    boolean removeSubPropertyOf(org.xowl.infra.lang.runtime.Property elem);
    java.util.Collection<org.xowl.infra.lang.runtime.Property> getAllSubPropertyOfAs(org.xowl.infra.lang.runtime.Property type);
    // </editor-fold>
    // <editor-fold defaultstate="collapsed" desc="Property range">
    public static interface range {
        boolean check_contains(org.xowl.infra.lang.runtime.Class_OR_Datatype elem);
        boolean user_check_add(org.xowl.infra.lang.runtime.Class_OR_Datatype elem);
        boolean user_check_remove(org.xowl.infra.lang.runtime.Class_OR_Datatype elem);
        boolean user_check_replace(org.xowl.infra.lang.runtime.Class_OR_Datatype oldElem, org.xowl.infra.lang.runtime.Class_OR_Datatype  newElem);
        void user_add(org.xowl.infra.lang.runtime.Class_OR_Datatype elem);
        void user_remove(org.xowl.infra.lang.runtime.Class_OR_Datatype elem);
        boolean inverse_check_add(org.xowl.infra.lang.runtime.Class_OR_Datatype elem);
        boolean inverse_check_remove(org.xowl.infra.lang.runtime.Class_OR_Datatype elem);
        boolean inverse_check_replace(org.xowl.infra.lang.runtime.Class_OR_Datatype oldElem, org.xowl.infra.lang.runtime.Class_OR_Datatype  newElem);
        void inverse_add(org.xowl.infra.lang.runtime.Class_OR_Datatype elem);
        void inverse_remove(org.xowl.infra.lang.runtime.Class_OR_Datatype elem);
    }
    range __getImplOfrange();
    boolean setRange(org.xowl.infra.lang.runtime.Class_OR_Datatype elem);
    org.xowl.infra.lang.runtime.Class_OR_Datatype getRangeAs(org.xowl.infra.lang.runtime.Class_OR_Datatype type);
    // </editor-fold>
    // <editor-fold defaultstate="collapsed" desc="Property propertyDisjointWith">
    public static interface propertyDisjointWith {
        boolean check_contains(org.xowl.infra.lang.runtime.Property elem);
        boolean user_check_add(org.xowl.infra.lang.runtime.Property elem);
        boolean user_check_remove(org.xowl.infra.lang.runtime.Property elem);
        boolean user_check_replace(org.xowl.infra.lang.runtime.Property oldElem, org.xowl.infra.lang.runtime.Property  newElem);
        void user_add(org.xowl.infra.lang.runtime.Property elem);
        void user_remove(org.xowl.infra.lang.runtime.Property elem);
        boolean inverse_check_add(org.xowl.infra.lang.runtime.Property elem);
        boolean inverse_check_remove(org.xowl.infra.lang.runtime.Property elem);
        boolean inverse_check_replace(org.xowl.infra.lang.runtime.Property oldElem, org.xowl.infra.lang.runtime.Property  newElem);
        void inverse_add(org.xowl.infra.lang.runtime.Property elem);
        void inverse_remove(org.xowl.infra.lang.runtime.Property elem);
    }
    propertyDisjointWith __getImplOfpropertyDisjointWith();
    boolean addPropertyDisjointWith(org.xowl.infra.lang.runtime.Property elem);
    boolean removePropertyDisjointWith(org.xowl.infra.lang.runtime.Property elem);
    java.util.Collection<org.xowl.infra.lang.runtime.Property> getAllPropertyDisjointWithAs(org.xowl.infra.lang.runtime.Property type);
    // </editor-fold>
    // <editor-fold defaultstate="collapsed" desc="Property isFunctional">
    public static interface isFunctional {
        boolean check_contains(java.lang.Boolean elem);
        boolean user_check_add(java.lang.Boolean elem);
        boolean user_check_remove(java.lang.Boolean elem);
        boolean user_check_replace(java.lang.Boolean oldElem, java.lang.Boolean  newElem);
        void user_add(java.lang.Boolean elem);
        void user_remove(java.lang.Boolean elem);
        boolean inverse_check_add(java.lang.Boolean elem);
        boolean inverse_check_remove(java.lang.Boolean elem);
        boolean inverse_check_replace(java.lang.Boolean oldElem, java.lang.Boolean  newElem);
        void inverse_add(java.lang.Boolean elem);
        void inverse_remove(java.lang.Boolean elem);
    }
    isFunctional __getImplOfisFunctional();
    boolean setIsFunctional(java.lang.Boolean elem);
    java.lang.Boolean getIsFunctional();
    // </editor-fold>
}
